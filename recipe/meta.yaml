{% set version = "1.2.4" %}

package:
  name: pyhams
  version: {{ version }}

source:
  url: https://github.com/WISDEM/pyHAMS/archive/v{{ version }}.tar.gz
  sha256: b3049f617dd75d1a9f04f38e0f6927750f1fe07cbcbfcfaea6a6bef867d97b3c
  # Download the tar-ball and do: openssl sha256 file.tar.gz to update
  patches:
    - meson_files.patch

build:
  number: 0
  skip: true  # [py<39]
  #script:
  #  - del /s /q {{ BUILD_PREFIX }}\Library\mingw-w64\bin\pkg-config*  # [win]
  #  - echo "python = '${PREFIX}/bin/python'" >> ${BUILD_PREFIX}/meson_cross_file.txt  # [build_platform != target_platform]
  #  - {{ PYTHON }} -m pip install . --no-deps -vv

requirements:
  build:
    - {{ compiler('c') }}    # [not win]
    - {{ compiler('fortran') }}
    # This brings in the whole m2w64-toolchain, including m2w64-pkgconfig that doesn't
    # find the right libraries compared to the regular conda version.  See above script
    # addition to "remove" the m2w64 pkg-config before installing
    - {{ compiler('m2w64_c') }}         # [win]
    - cross-python_{{ target_platform }}      # [build_platform != target_platform]
    - python                                  # [build_platform != target_platform]
    - meson-python
    - meson
    - ninja
    - pkg-config
    - numpy
    # Cmake is needed to help find libraries on windows
    - cmake         # [win]
    - llvm-openmp   # [osx]
    #- libgomp      # [linux or win]
    - openblas      # [win]
  host:
    - cython
    - libpython        # [win]
    - python
    - pip
    - python-build
    - numpy
    - openblas
    - meson
    - meson-python
    - ninja
    #- libgomp      # [linux or win]
  run:
    - {{ pin_compatible('numpy') }}
    - python
    - ninja
    - libopenblas
    - m2w64-gcc-libgfortran  # [win]
    #- libgomp      # [linux or win]

test:
  imports:
    - pyhams
    - pyhams.pyhams
  #requires:
  #  - pip
  #commands:
  #  - cd test
  #  - pytest .

about:
  home: https://github.com/WISDEM/pyHAMS
  license: Apache-2.0
  license_file: LICENSE
  summary: Python module wrapping around HAMS
  dev_url: https://github.com/WISDEM/pyHAMS

extra:
  recipe-maintainers:
    - mattEhall
    - dzalkind
    - gbarter
    - lucas-carmo
